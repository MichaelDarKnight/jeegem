<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://code.alibabatech.com/schema/dubbo
        http://code.alibabatech.com/schema/dubbo/dubbo.xsd 
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc.xsd 
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop  
        http://www.springframework.org/schema/aop/spring-aop.xsd">
	<mvc:annotation-driven />
	<mvc:default-servlet-handler />
	<!-- 关闭提供者的检索 -->
	<dubbo:consumer check="false" />

	<!-- 消费方应用名，用于计算依赖关系，不是匹配条件，不要与提供方一样 -->
	<dubbo:application name="ts_consumer" />
	
	
	
	<!-- 从Spring2.5开始引入命名空间配置加载properties文件到XML -->
	<!-- <context:property-placeholder location="classpath:config.properties" /> -->
	
	<bean id="propertyConfigurer"
		class="com.jeegem.core.config.JeeGemPropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath:config.properties</value>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- 使用zookeeper注册中心暴露服务地址 -->
	<dubbo:registry address="${zookeeper.host}" />

	<!-- 生成远程服务代理，可以像使用本地bean,这里基于注解实例化远程代理接口 -->
	<dubbo:annotation package="com" />

	<!-- 服务调用超时设置为60秒,超时不重试 -->
	<dubbo:provider delay="-1" timeout="60000" retries="0" />

	<!-- spring 扫描所有类，完成实例注入 -->
	<context:component-scan base-package="com" />

	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
	
	<mvc:resources mapping="/resources/**" location="/resources/" />
	
	<bean name="springContextUtil" class="com.jeegem.common.utils.SpringContextUtil" scope="singleton" />
	
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">  
		<property name="messageConverters">  
	        <list>  
	               <ref bean="mappingJacksonHttpMessageConverter" />  
	        </list>  
	    </property>  
	</bean>  
	        
	<bean id="mappingJacksonHttpMessageConverter"  
	    class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
	     <property name = "supportedMediaTypes">  
			  <list>  
			    <bean class="org.springframework.http.MediaType">  
			     <constructor-arg index="0" value="text"/>  
			     <constructor-arg index="1" value="plain"/>  
			     <constructor-arg index="2" value="UTF-8"/>  
			    </bean>  
			    <bean class="org.springframework.http.MediaType">  
			     <constructor-arg index="0" value="*"/>  
			     <constructor-arg index="1" value="*"/>  
			     <constructor-arg index="2" value="UTF-8"/>  
			    </bean>  
			    <bean class="org.springframework.http.MediaType">  
			     <constructor-arg index="0" value="text"/>  
			     <constructor-arg index="1" value="*"/>  
			     <constructor-arg index="2" value="UTF-8"/>  
			    </bean>  
			     <bean class="org.springframework.http.MediaType">  
			     <constructor-arg index="0" value="application"/>  
			     <constructor-arg index="1" value="json"/>  
			     <constructor-arg index="2" value="UTF-8"/>  
			    </bean>  
			  </list>  
		</property>  
	</bean>   
	
	<!--===============视图解析器 begin 没有配置prefix以及suffix,指向在JeeGemModelAndView设置,便于使用.===============-->
	<!-- 配置freeMarker视图解析器 -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<!-- 把Freemarker 扩展一下，把相关属性加入进去。。。 -->
		<property name="contentType" value="text/html; charset=utf-8" />
		<property name="cache" value="true" />
	</bean>
	
	<!--===============视图解析器 end===============-->
	
	<!-- 配置freeMarker 拓展-->
	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath">
			<value>/</value>
		</property>
		<property name="freemarkerVariables">
			<map>
				<entry key="xml_escape" value-ref="fmXmlEscape" />
			</map>
		</property>
		<property name="defaultEncoding">
			<value>utf-8</value>
		</property>
		<property name="freemarkerSettings">
			<props><!-- 315360000 -->
					<prop key="template_update_delay">0</prop>
					<prop key="defaultEncoding">UTF-8</prop>
					<prop key="url_escaping_charset">UTF-8</prop>
					<prop key="locale">zh_CN</prop>
					<prop key="boolean_format">true,false</prop>
					<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
					<prop key="date_format">yyyy-MM-dd</prop>
					<prop key="time_format">HH:mm:ss</prop>
				<!--<prop key="number_format">0.######</prop>-->
				<prop key="number_format">#</prop>
				<prop key="whitespace_stripping">true</prop>
				<prop key="auto_import">
					<!-- 自动装载，引入Freemarker，用于Freemarker Macro引入 -->
				</prop>
			</props>
		</property>
	</bean>
	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape"/>
	<!--===============通用视图解析器 end===============-->
	
	
	<!--  上传文件定义大小 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		p:defaultEncoding="utf-8">
		<!--
			maxUploadSize：设置允许上传的最大文件大小，以字节为单位计算。当设为-1时表示无限制，默认是-1。
    		maxInMemorySize：设置在文件上传时允许写到内存中的最大值，以字节为单位计算，默认是10240。 
    	-->
		<property name="maxUploadSize">
			<!-- 文件上传最大为10M -->
			<value>10485760</value>
		</property>
		
		<property name="maxInMemorySize" value="10485760" />
	</bean>
</beans>
